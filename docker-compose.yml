services:
# ────────────────────────────── Core infra ─────────────────────────────
  kafka:
    image: bitnami/kafka:3.6.1
    container_name: kafka
    environment:
      # ── mandatory KRaft variables ────────────────────────────────────
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      # ── convenience flags ────────────────────────────────────────────
      - ALLOW_PLAINTEXT_LISTENER=yes        # fine for dev / take-home
      - BITNAMI_DEBUG=true                  # nicer startup logs
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/9092"]
      interval: 10s
      timeout: 5s
      retries: 6

  mongo:
    image: mongo:6.0
    container_name: mongo
    ports:
      - "27017:27017"

# ────────────────────────────── App containers ─────────────────────────
  api:
    build: ./backend
    command: uvicorn main:app --host 0.0.0.0 --port 5000
    container_name: api
    environment:
      - MONGO_URI=mongodb://mongo:27017/
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    ports:
      - "5000:5000"
    depends_on:
      kafka:
        condition: service_healthy
      mongo:
        condition: service_started

  worker:
    build: ./backend
    command: python worker.py
    container_name: worker
    environment:
      - MONGO_URI=mongodb://mongo:27017/
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
      mongo:
        condition: service_started

  vendor_sync:
    build: ./backend
    command: uvicorn vendors.sync_vendor:app --host 0.0.0.0 --port 5000
    container_name: vendor_sync
    ports:
      - "5001:5000"
    depends_on:
      api:
        condition: service_started

  vendor_async:
    build: ./backend
    command: uvicorn vendors.async_vendor:app --host 0.0.0.0 --port 5000
    container_name: vendor_async
    environment:
      - API_URL=http://api:5000
    ports:
      - "5002:5000"
    depends_on:
      api:
        condition: service_started
